#define CSHARP
#undef VB

using System;

namespace Directive
{
	class Directiveclass
	{
		public static void Main(string[] args)
		{
			Directive1.ConditionalDirective.condition();
			//Directives2.WarningDirective.warning();
			//Directive3.line.line();
			Directive4.Region.region();
			Directive5.Error.pragma();
		}
	}
}

namespace Directive1
{
	class ConditionalDirective
	{
		public static void condition()
		{
#if (CSHARP && VB)
				Console.WriteLine("CSHARP and VB are defined");
#elif (CSHARP && !VB)
			Console.WriteLine("CSHARP is defined, VB is undefined");
#elif (!CSHARP && VB)
				Console.WriteLine("VB is defined, CSHARP is undefined");
#else
				Console.WriteLine("CSHARP and VB are undefined");
#endif
		}
	}
}

//CTRL+C+K to comment and uncomment


//namespace Directives2
//{
//	class WarningDirective
//	{
//		public static void warning()
//		{
//#if (!JAVA)
//#warning JAVA is undefined
//#error JAVA is undefined
//#endif
//			Console.WriteLine("#warning directive example");
//			Console.WriteLine("#error directive example");
//		}
//	}
//}

//namespace Directive3
//{
//	//We have saved the above example as Program.cs. The warning was actually generated at line 10 by Program.cs.
//	//Using the #line directive,
//	//we have changed the line number to 200 and the filename to AnotherProgram.cs that generated the error.
//	class line
//	{
//		public static void line()
//		{
//#line 200 "AnotherProgram.cs"
//#warning Actual Warning generated by Program.cs on line 10
//		}
//	}
//}

namespace Directive4
{
	class Region
	{
		public static void region()
		{
			#region Hello
			Console.WriteLine("Hello");
			Console.WriteLine("Hello");
			Console.WriteLine("Hello");
			Console.WriteLine("Hello");
			Console.WriteLine("Hello");
			#endregion
		}
	}
}

namespace Directive5
{
	class Error
	{
		public static void pragma()
		{
#pragma warning disable
#warning This is a warning 1
#pragma warning restore
#warning This is a warning 2
		}
	}
}

-------------------------------------------------------------
Accessing namespace from another .cs file
--------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Directive;

namespace Program
{
    class Class1
    {
        Directiveclass d = new Directiveclass();
    }
}
